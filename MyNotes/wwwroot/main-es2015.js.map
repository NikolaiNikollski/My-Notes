{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Data/Note.ts","./src/app/Data/http.service.ts","./src/app/app.module.ts","./src/app/authorization/app.authorization.ts","./src/app/authorization/app.authorization.html","./src/app/main/app.main.ts","./src/app/main/app.main.html","./src/app/notelist/app.notelist.ts","./src/app/notelist/app.notelist.html","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Note {\n    Text: string;\n    Date: string;\n    Id: number;\n    Selected: boolean;\n    TempText: string;\n\n    constructor(text: string, date: string, id: number) {\n        this.Text = text;\n        this.Date = date;\n        this.Id = id;\n        this.Selected = false;\n        this.TempText = null;\n    }\n} \n","import { Note } from './Note';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    urlNote: string = 'http://localhost/Api/Note';\r\n    urlAuth: string = 'http://localhost/Api/Auth'\r\n    constructor(private http: HttpClient) { }\r\n\r\n    create(note: Note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('text', note.Text);\r\n        formData.append('date', note.Date)\r\n        return this.http.post(this.urlNote + \"/createNote\", formData)\r\n    }\r\n\r\n    update(note: Note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('text', note.Text);\r\n        formData.append('date', note.Date);\r\n        formData.append('noteId', note.Id.toString());\r\n        return this.http.post(this.urlNote + '/updateNote', formData)\r\n    }\r\n\r\n    loadNotes(): Observable<object[]> {\r\n      \r\n        return this.http.get(this.urlNote + '/getAllNotes').pipe(map(data => {\r\n            return { ...data.value, notes: data.value.notes.map(note => new Note(note.text, note.date, note.noteId)) }              \r\n        }));\r\n    }\r\n\r\n    delete(note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('noteId', note.Id.toString());\r\n        return this.http.post(this.urlNote + '/deleteNote', formData)\r\n    }\r\n\r\n    checkUsername(username: string): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('username', username);\r\n        return this.http.post(this.urlAuth + '/checkUsername', formData)\r\n    }\r\n\r\n    login(form: NgForm): Observable<object> {\r\n        const credentials = JSON.stringify(form.value);\r\n        return this.http.post(this.urlAuth + '/login', credentials, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        })\r\n    }\r\n\r\n    register(form: NgForm): Observable<object>  {\r\n        const credentials = JSON.stringify(form.value);\r\n        console.log(credentials)\r\n        return this.http.post(this.urlAuth + '/register', credentials, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        })\r\n    }\r\n\r\n    async refresh(credentials): Promise<HttpResponse<Object>>{\r\n        const response = await this.http.post(this.urlAuth + '/refresh', credentials, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            }),\r\n            observe: 'response'\r\n        }).toPromise();\r\n        return response\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppMain } from './main/app.main';\nimport { AppNotelist } from './notelist/app.notelist';\nimport { AppAuthorization } from './authorization/app.authorization'\nimport { JwtModule } from \"@auth0/angular-jwt\"; \n\nexport function tokenGetter() {\n  return localStorage.getItem(\"jwt\");\n}\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule,\n        JwtModule.forRoot({\n            config: {\n                tokenGetter: tokenGetter,\n                allowedDomains: [\"localhost\"],\n                disallowedRoutes: []\n            }\n        })\n    ],\n    declarations: [\n        AppMain,\n        AppNotelist,\n        AppAuthorization,\n    ], \n    bootstrap: [AppMain]\n})\nexport class AppModule { }","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Note } from '../Data/Note'\nimport { HttpService } from '../Data/http.service'\nimport { NgForm, FormControl, Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\n    selector: 'authorization',\n    templateUrl: 'app.authorization.html',\n    styleUrls: ['app.authorization.css'],\n    providers: [HttpService],\n})\nexport class AppAuthorization{\n\n    clientForm: FormGroup;\r\n\r\n    constructor(private fb: FormBuilder, private httpService: HttpService) {\r\n        this._createForm();\r\n    }\r\n\r\n    private _createForm() {\r\n        this.clientForm = this.fb.group({\r\n            username: ['', [\r\n                Validators.required,\r\n                Validators.minLength(3),\r\n            ]],\r\n            password: ['', [\r\n                    Validators.required,\r\n                    Validators.minLength(5),\r\n                    Validators.pattern(/[0-9]/),\r\n                    Validators.pattern(/[a-zA-Z]/),\r\n            ]],\r\n\r\n            rePassword: ['', [\r\n                Validators.required,\r\n                this.isRePasswordCorrect(),\r\n            ]],\r\n        })\r\n    }\r\n\r\n    get _username() {\r\n        return this.clientForm.get('username')\r\n    }\r\n\r\n    get _password() {\r\n        return this.clientForm.get('password')\r\n    }\r\n\r\n    get _rePassword() {\r\n        return this.clientForm.get('rePassword')\r\n    }\r\n\r\n    isRePasswordCorrect(): ValidatorFn {\r\n        return (\r\n            control: AbstractControl\r\n        ): { [key: string]: boolean } | null => {\r\n\r\n            if (this.clientForm) {\r\n                var condition = this.clientForm.get('password').value === this.clientForm.get('rePassword').value\r\n            }\r\n            let valid =\r\n                !control.value || condition\r\n            return valid ? null : {\r\n                RePasswordCorrectionError: true,\r\n            }\r\n        }\r\n    }\r\n\n    getFormcontroll() {\n        console.log(this.clientForm)\r\n    }\n\n    @Input() userAuthenticated;\n    @Input() userName\n    @Output() onChangedAuth = new EventEmitter<boolean>();\n    activeLoginForm: boolean = false;\n    activeRegisterForm: boolean = false\n    error: string = null;\n\n    getLoginForm() {\n        this.activeLoginForm = true;\r\n        this.activeRegisterForm = false;\r\n        this.error = null;\r\n    }\n\n    getRegisterForm() {\n        this.activeRegisterForm = true;\r\n        this.activeLoginForm = false;\r\n        this.error = null;\r\n    }\n\n\n    register(form: NgForm) {\n        if (this.clientForm.invalid) {\n            return\n        }   \n        \n        this.logout()\n        this.httpService.register(form).subscribe(response => this.onCopmplete(response), (err: HttpErrorResponse) => this.onError(err))\n    }\n\n    login(form: NgForm) {\n        this.logout()\n        this.httpService.login(form).subscribe(response => this.onCopmplete(response), errResponse => this.onError(errResponse))\n    }\n\n    onCopmplete(response) {\n        const token = (<any>response).value.accessToken;\n        const refreshToken = (<any>response).value.refreshToken;\n        localStorage.setItem(\"jwt\", token);\n        localStorage.setItem(\"refreshToken\", refreshToken);\r\n        this.onChangedAuth.emit(true);\r\n        this.activeLoginForm = false;\r\n        this.activeRegisterForm = false;\r\n        this.error = null;\r\n    }\n\n    onError(errResponse) {\r\n        this.error = errResponse.error;\r\n    }\n\n    public logout() {\r\n        localStorage.removeItem(\"jwt\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        this.onChangedAuth.emit(false);\r\n        this.activeLoginForm = true;\r\n        this.userName = null\r\n    }\n}\n\n","<header>\r\n    <div class=\"nav\">\r\n        <div class=\"authPanel\">\r\n            {{userName}}\r\n            <button *ngIf=\"!userAuthenticated\" class=\"authPanelButton\" (click)=\"getLoginForm()\">Login</button>\r\n            <button *ngIf=\"!userAuthenticated\" class=\"authPanelButton\" (click)=\"getRegisterForm()\">Register</button>\r\n            <button *ngIf=\"userAuthenticated\" class=\"authPanelButton\" (click)=\"logout()\">logout</button>\r\n        </div>\r\n    </div>\r\n</header>\r\n\r\n\r\n<form *ngIf=\"activeLoginForm\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\r\n    <div class=\"container-fluid formContainer\">\r\n        <h2 class=\"form-signin-heading\">Login</h2> <br />\r\n\r\n        <input type=\"email\" name=\"username\" ngModel class=\"form-control\" placeholder=\"User Name\" required autofocus>  <br />\r\n\r\n        <input type=\"password\" name=\"password\" ngModel class=\"form-control\" placeholder=\"Password\" required> <br />\r\n\r\n        <button class=\"btn btn-lg btn-primary formButton\" type=\"submit\">Sign in</button>\r\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n    </div>\r\n</form>\r\n\r\n<form *ngIf=\"activeRegisterForm\" #registerForm=\"ngForm\" (ngSubmit)=\"register(registerForm)\" [formGroup]=\"clientForm\" novalidate>\r\n    <div class=\"container-fluid formContainer\">\r\n        <h2 class=\"form-signin-heading\">Register</h2> <br />\r\n\r\n        <div class=\"inputBlock\">\r\n            <input type=\"email\" ngModel class=\"form-control\" placeholder=\"User Name\" formControlName=\"username\">\r\n            <span class=\"requiredSimbol\" *ngIf=\"_username.errors?.required && _username.touched\">*</span>\r\n            <br />\r\n        </div>\r\n\r\n        <div class=\"inputBlock\">\r\n            <input type=\"password\" ngModel class=\"form-control\" placeholder=\"Password\" formControlName=\"password\">\r\n            <span class=\"requiredSimbol\" *ngIf=\"_password.errors?.required && _password.touched\">*</span>\r\n            <br />\r\n        </div>\r\n\r\n        <div class=\"inputBlock\">\r\n            <input type=\"password\" ngModel class=\"form-control\" placeholder=\"Password Repeat\" formControlName=\"rePassword\">\r\n            <span class=\"requiredSimbol\" *ngIf=\"_rePassword.errors?.required && _rePassword.touched\">*</span>\r\n            <br />\r\n        </div>\r\n\r\n        <button class=\"btn btn-lg btn-primary formButton\" type=\"submit\">Register</button>\r\n\r\n        <ul class=\"errorBlock\" *ngIf=\"_username.invalid && _username.touched\">\r\n            <li *ngIf=\"_username.errors?.minlength\">username must contain at least {{_username.errors?.minlength.requiredLength}} simbols. <br /></li>\r\n        </ul>\r\n\r\n        <ul class=\"errorBlock\" *ngIf=\"_password.invalid && _password.touched\">\r\n            <li *ngIf=\"_password.errors?.minlength\">Password must contain at least {{_password.errors?.minlength.requiredLength}} simbols. <br /></li>\r\n            <li *ngIf=\"_password.errors?.pattern?.requiredPattern == '/[0-9]/' \">Password must contain digit. <br /></li>\r\n            <li *ngIf=\"_password.errors?.pattern?.requiredPattern == '/[a-zA-Z]/' \">Password must contain letter.<br /></li>\r\n        </ul>\r\n\r\n        <ul class=\"errorBlock\" *ngIf=\"_rePassword.invalid && _rePassword.touched\">\r\n            <li *ngIf=\"_rePassword.errors?.RePasswordCorrectionError\">Passwords must match.<br /> </li>\r\n        </ul>\r\n\r\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n    </div>\r\n</form>\r\n\r\n<button (click)=\"getFormcontroll()\"> getFormcontroll</button>\r\n","import { Component } from '@angular/core';\nimport { Note } from '../Data/Note'\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\n@Component({\n    selector: 'my-app',\n    templateUrl: 'app.main.html',\n    styleUrls: ['app.main.css']\n\n})\nexport class AppMain {\n\n    constructor(private jwtHelper: JwtHelperService,) { }\n\n    userAuthenticated = this.isUserAuthenticated()\n    userName: string\n\n    onChangedAuth(increased: boolean) {\r\n        this.userAuthenticated = increased\r\n    }\n\n    onChangedUserName(newUserName: string) {\r\n        if (newUserName === null)\r\n            this.userAuthenticated = false\r\n        this.userName = newUserName\r\n    }\n\n    isUserAuthenticated() {\n        const token: string = localStorage.getItem(\"jwt\");\n        return (token && !this.jwtHelper.isTokenExpired(token));\n    }\n}\n\n","<div>\n    <authorization [userAuthenticated]=\"userAuthenticated\"\n                   (onChangedAuth)=\"onChangedAuth($event)\"\n                   [userName] = \"userName\">\n    </authorization>\n    <notelist \n              *ngIf=\"userAuthenticated\"\n              (onChangedUserName)=\"onChangedUserName($event)\">\n    </notelist>\n</div>  \n\n","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { HttpService } from '../Data/http.service'\r\nimport { Note } from '../Data/Note';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { HttpHeaders, HttpClient,  } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'notelist',\r\n    templateUrl: 'app.notelist.html',\r\n    styleUrls: ['app.notelist.css'],\r\n    providers: [HttpService],\r\n})\r\n\r\nexport class AppNotelist {\r\n\r\n    @Output() onChangedUserName = new EventEmitter<string>();\r\n    notelist: Array<Note> = [];\r\n    constructor(private httpService: HttpService, private jwtHelper: JwtHelperService, private http: HttpClient) { }\r\n\r\n\r\n    async createNote(): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) return\r\n\r\n        let note: Note = new Note(\"\", this.formateDate(new Date), null)\r\n\r\n        this.httpService.create(note).subscribe((id: any) => {\r\n            note.Id = id\r\n        }, (err) => { this.onChangedUserName.emit(null) })\r\n\r\n        this.notelist.unshift(note)\r\n        setTimeout(() => {\r\n            note.Selected = true\r\n        }, 100);\r\n    }\r\n\r\n    async update(note: Note): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) return\r\n\r\n        this.httpService.update(note).subscribe(() => { }, (err) => { this.onChangedUserName.emit(null) })\r\n        note.Selected = false;\r\n        note.TempText = null;\r\n    }\r\n\r\n    async del(note: Note, index: number): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) {\r\n            this.onChangedUserName.emit(null)\r\n            return\r\n        }\r\n\r\n        if (!this.canActivate()) return \r\n        this.httpService.delete(note).subscribe(() => { }, (err) => { this.onChangedUserName.emit(null) })\r\n        note.Selected = false;\r\n        this.notelist.splice(index, 1)\r\n    }\r\n\r\n\r\n    async selectNote(note: Note): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) return\r\n\r\n        note.Selected = true;\r\n        note.TempText = note.Text\r\n    }\r\n\r\n    async unselectNote(note: Note, index: number): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) return\r\n \r\n        note.Selected = false;\r\n        note.Text = note.TempText\r\n        note.TempText = null;\r\n    }\r\n\r\n    async loadNotes(): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) return\r\n\r\n        this.httpService.loadNotes().subscribe((data: any) => {\r\n            this.notelist = data.notes\r\n            this.onChangedUserName.emit(data.name)\r\n        }, (err) => { this.onChangedUserName.emit(null) })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n \r\n        this.loadNotes()\r\n    }\r\n\r\n    formateDate(inDate: Date): string {\r\n        const options = {\r\n            month: 'long',\r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n        };\r\n        return inDate.toLocaleString('ru', options);\r\n    }\r\n\r\n    async canActivate() {\r\n        const token = localStorage.getItem(\"jwt\");\r\n\r\n        if (token && !this.jwtHelper.isTokenExpired(token))\r\n            return true;\r\n\r\n        let refreshSuccessPromise = await this.tryRefreshingTokens(token)\r\n        if (refreshSuccessPromise)\r\n            return true\r\n\r\n        this.onChangedUserName.emit(null)\r\n        return false\r\n    }\r\n\r\n    private async tryRefreshingTokens(token: string): Promise<boolean> {\r\n        const refreshToken: string = localStorage.getItem(\"refreshToken\");\r\n        const credentials = JSON.stringify({ accessToken: token, refreshToken: refreshToken });\r\n        let isRefreshSuccess: boolean;\r\n        try {\r\n            const response = await this.httpService.refresh(credentials)\r\n\r\n            const newToken = response.body.accessToken;\r\n            const newRefreshToken = response.body.refreshToken;\r\n            localStorage.setItem(\"jwt\", newToken);\r\n            localStorage.setItem(\"refreshToken\", newRefreshToken);\r\n            isRefreshSuccess = true;\r\n        }\r\n        catch (ex) {\r\n            isRefreshSuccess = false;\r\n        }\r\n        return isRefreshSuccess;\r\n    }\r\n\r\n}\r\n\r\n\r\n","<div>\n    <button class=\"btn btn-success createButton\" (click)=\"createNote()\">New Note</button>\n</div>\n<div class=\"notelistContainer col-md-6 offset-md-3\">\n    <div class=\"noteContainer\" [class.selected]=\"note.Selected\" *ngFor=\"let note of notelist; index as index;\">\n        <div class=\"body\" [class.selected]=\"note.Selected\" (click)=\"selectNote(note)\">\n            <textarea class=\"noteText\" [class.selected]=\"note.Selected\" [(ngModel)]=\"note.Text\" [disabled]=\"!note.Selected\"></textarea>\n            <input class=\"noteDate\" [class.selected]=\"note.Selected\" type=\"text\" [(ngModel)]=\"note.Date\" disabled>\n        </div>\n        <div class=\"buttonBlock\">\n            <button [class.selected]=\"note.Selected\" class=\"btn btn-success saveButton\" (click)=\"update(note, index)\">Save</button>\n            <button [class.selected]=\"note.Selected\" class=\"btn btn-success cancelButton\" (click)=\"unselectNote(note, index)\">Cancel</button>\n            <button [class.selected]=\"note.Selected\" class=\"btn btn-success deleteButton\" (click)=\"del(note, index)\">Delete</button>\n        </div>\n    </div>\n</div>\n\n\n\n    ","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nconst platform = platformBrowserDynamic();\nplatform.bootstrapModule(AppModule);"],"sourceRoot":"webpack:///"}