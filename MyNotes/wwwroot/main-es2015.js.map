{"version":3,"sources":["./src/app/data/cookie.service.ts","./src/app/authorization/app.authorization.ts","./src/app/authorization/app.authorization.html","./src/app/welcome/app.welcome.ts","./src/app/welcome/app.welcome.html","./src/app/app.module.ts","./src/app/data/http.service.ts","./src/app/app.Configuration.ts","./src/app/notelist/app.notelist.ts","./src/app/notelist/app.notelist.html","./src/app/main/app.main.ts","./src/app/main/app.main.html","./src/app/data/note.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CookieService {\r\n\r\n    getCookie(name) {\r\n        let matches = document.cookie.match(new RegExp(\r\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n\r\n\r\n    setCookie(name, value, options) {\r\n\r\n        options = {\r\n            path: '/',\r\n            // ��� ������������� �������� ������ �������� �� ���������\r\n            ...options\r\n        };\r\n\r\n        if (options.expires instanceof Date) {\r\n            options.expires = options.expires.toUTCString();\r\n        }\r\n\r\n        let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\r\n\r\n        for (let optionKey in options) {\r\n            updatedCookie += \"; \" + optionKey;\r\n            let optionValue = options[optionKey];\r\n            if (optionValue !== true) {\r\n                updatedCookie += \"=\" + optionValue;\r\n            }\r\n        }\r\n\r\n        document.cookie = updatedCookie;\r\n    }\r\n\r\n    deleteCookie(name) {\r\n        this.setCookie(name, \"\", {\r\n            'max-age': -1\r\n        })\r\n    }\r\n\r\n}\r\n\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { HttpService } from '../data/http.service'\nimport { CookieService } from '../data/cookie.service'\r\nimport { NgForm, Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n\r\n@Component({\n    selector: 'authorization',\n    templateUrl: 'app.authorization.html',\n    styleUrls: ['app.authorization.css'],\n    providers: [HttpService, CookieService],\n})\nexport class AppAuthorization{\n    registerForm: FormGroup;\r\n    loginForm: FormGroup;\r\n\r\n    constructor(private fb: FormBuilder, private httpService: HttpService, private cookieService: CookieService ) {\r\n        this._createRegisterForm();\r\n        this._createLoginForm();\r\n    }\r\n\r\n    private _createRegisterForm() {\r\n        this.registerForm = this.fb.group({\r\n            username: ['', [\r\n                Validators.required,\r\n                Validators.minLength(3),\r\n            ]],\r\n            password: ['', [\r\n                    Validators.required,\r\n                    Validators.minLength(5),\r\n                    Validators.pattern(/[0-9]/),\r\n                    Validators.pattern(/[a-zA-Z]/),\r\n            ]],\r\n            rePassword: ['', [\r\n                Validators.required,\r\n                this.isRePasswordCorrect(),\r\n            ]],\r\n        })\r\n    }\r\n\r\n    get _registerUsername() {\r\n        return this.registerForm.get('username')\r\n    }\r\n\r\n    get _registerPassword() {\r\n        return this.registerForm.get('password')\r\n    }\r\n\r\n    get _registerRePassword() {\r\n        return this.registerForm.get('rePassword')\r\n    }\r\n\r\n\r\n    private _createLoginForm() {\r\n        this.loginForm = this.fb.group({\r\n            username: ['', [\r\n                Validators.required,\r\n            ]],\r\n            password: ['', [\r\n                Validators.required,\r\n            ]],\r\n        })\r\n    }\r\n\r\n    get _loginUsername() {\r\n        return this.loginForm.get('username')\r\n    }\r\n\r\n    get _loginPassword() {\r\n        return this.loginForm.get('password')\r\n    }\r\n\r\n    isRePasswordCorrect(): ValidatorFn {\r\n        return (\r\n            control: AbstractControl\r\n        ): { [key: string]: boolean } | null => {\r\n\r\n            if (this.registerForm) {\r\n                var condition = this.registerForm.get('password').value === this.registerForm.get('rePassword').value\r\n            }\r\n            let valid =\r\n                !control.value || condition\r\n            return valid ? null : {\r\n                RePasswordCorrectionError: true,\r\n            }\r\n        }\r\n    }\r\n\n    getFormcontroll() {\n        console.log(this.registerForm)\r\n    }\n\n    @Input() userAuthenticated;\n    @Input() userName\n    @Output() onChangedAuth = new EventEmitter<boolean>();\n    activeLoginForm: boolean = true;\n    activeRegisterForm: boolean = false\n    error: string = null;\n\n    getLoginForm() {\n        this.activeLoginForm = true;\r\n        this.activeRegisterForm = false;\r\n        this.error = null;\r\n    }\n\n    getRegisterForm() {\n        this.activeRegisterForm = true;\r\n        this.activeLoginForm = false;\r\n        this.error = null;\r\n    }\n\n    register(form: NgForm) {\n        if (this.registerForm.invalid) {\n            this._registerUsername.markAsTouched()\n            this._registerPassword.markAsTouched()\n            this._registerRePassword.markAsTouched()\n            return\n        }   \n        \n        this.logout()\n        this.httpService.register(form).subscribe(response => this.onCopmplete(response), (err: HttpErrorResponse) => this.onError(err))\n    }\n\n    login(form: NgForm) {\n        if (this.loginForm.invalid) {\n            this._loginUsername.markAsTouched()\n            this._loginPassword.markAsTouched()\n            return\n        }   \n        this.logout()\n        this.httpService.login(form).subscribe(response => this.onCopmplete(response), errResponse => this.onError(errResponse))\n    }\n\n    onCopmplete(response) {\r\n        this.onChangedAuth.emit(true);\r\n        this.activeLoginForm = false;\r\n        this.activeRegisterForm = false;\r\n        this.error = null;\r\n    }\n\n    onError(errResponse) {\r\n        this.error = errResponse.error;\r\n    }\n\n    logout() {\r\n        this.cookieService.deleteCookie('accessToken')\r\n        this.onChangedAuth.emit(false);\r\n        this.activeLoginForm = true;\r\n        this.userName = null\r\n    }\n\n}\n\n","<header>\r\n    <div class=\"nav\">\r\n        <div class=\"authPanel\">\r\n            {{userName}}\r\n            <button *ngIf=\"!userAuthenticated\" class=\"authPanelButton\" (click)=\"getLoginForm()\">Login</button>\r\n            <button *ngIf=\"!userAuthenticated\" class=\"authPanelButton\" (click)=\"getRegisterForm()\">Register</button>\r\n            <button *ngIf=\"userAuthenticated\" class=\"authPanelButton\" (click)=\"logout()\">logout</button>\r\n        </div>\r\n    </div>\r\n</header>\r\n\r\n<form *ngIf=\"activeLoginForm\" [formGroup]=\"loginForm\" (ngSubmit)=\"login(loginForm)\" novalidate>\r\n    <div class=\"container-fluid formContainer\">\r\n        <h2 class=\"form-signin-heading\">Login</h2> <br />\r\n\r\n        <div class=\"inputBlock\">\r\n            <input formControlName=\"username\" type=\"text\" class=\"form-control\" placeholder=\"Username\">\r\n            <span *ngIf=\"_loginUsername.errors?.required && _loginUsername.touched\" class=\"requiredSimbol\">*</span>\r\n            <br />\r\n        </div>\r\n\r\n        <div class=\"inputBlock\">\r\n            <input formControlName=\"password\" type=\"password\" class=\"form-control\" placeholder=\"Password\">\r\n            <span *ngIf=\"_loginPassword.errors?.required && _loginPassword.touched\" class=\"requiredSimbol\">*</span>\r\n            <br />\r\n        </div>\r\n\r\n        <button class=\"btn btn-lg btn-primary formButton\" type=\"submit\">Sign in</button>\r\n\r\n        <ul *ngIf=\"_loginUsername.touched && _loginUsername.invalid || _loginPassword.touched &&  _loginPassword.invalid\" class=\"ValidationErrorBlock\">\r\n            <li *ngIf=\"_loginUsername.errors?.required || _loginPassword.errors?.required\">Fill in all required fields. <br /></li>\r\n        </ul>\r\n\r\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n    </div>\r\n</form>\r\n\r\n<form *ngIf=\"activeRegisterForm\" [formGroup]=\"registerForm\" (ngSubmit)=\"register(registerForm)\"  novalidate>\r\n    <div class=\"container-fluid formContainer\">\r\n        <h2 class=\"form-signin-heading\">Register</h2> <br />\r\n\r\n        <div class=\"inputBlock\">\r\n            <input formControlName=\"username\" type=\"text\" class=\"form-control\" placeholder=\"Username\">\r\n            <span *ngIf=\"_registerUsername.errors?.required && _registerUsername.touched\" class=\"requiredSimbol\" >*</span>\r\n            <br />\r\n        </div>\r\n\r\n        <div class=\"inputBlock\">\r\n            <input formControlName=\"password\" type=\"password\" class=\"form-control\" placeholder=\"Password\">\r\n            <span *ngIf=\"_registerPassword.errors?.required && _registerPassword.touched\" class=\"requiredSimbol\" >*</span>\r\n            <br />\r\n        </div>\r\n\r\n        <div class=\"inputBlock\">\r\n            <input formControlName=\"rePassword\" type=\"password\" class=\"form-control\" placeholder=\"Password Repeat\">\r\n            <span *ngIf=\"_registerRePassword.errors?.required && _registerRePassword.touched\" class=\"requiredSimbol\" >*</span>\r\n            <br />\r\n        </div>\r\n\r\n        <button class=\"btn btn-lg btn-primary formButton\" type=\"submit\">Register</button>\r\n\r\n        <ul \r\n            *ngIf=\"_registerUsername.touched && _registerUsername.invalid || \r\n            _registerPassword.touched && _registerPassword.invalid || \r\n            _registerRePassword.touched && _registerRePassword.invalid\" \r\n            class=\"ValidationErrorBlock\"\r\n            >\r\n            <li *ngIf=\"_registerUsername.errors?.required || _registerPassword.errors?.required || _registerRePassword.errors?.required\">Fill in all required fields. <br /></li>\r\n            <li *ngIf=\"_registerUsername.errors?.minlength\">Username must contain at least {{_registerUsername.errors?.minlength.requiredLength}} simbols. <br /></li>\r\n            <li *ngIf=\"_registerPassword.errors?.minlength\">Password must contain at least {{_registerPassword.errors?.minlength.requiredLength}} simbols. <br /></li>\r\n            <li *ngIf=\"_registerPassword.errors?.pattern?.requiredPattern == '/[0-9]/' \">Password must contain digit. <br /></li>\r\n            <li *ngIf=\"_registerPassword.errors?.pattern?.requiredPattern == '/[a-zA-Z]/' \">Password must contain letter.<br /></li>\r\n            <li *ngIf=\"_registerRePassword.errors?.RePasswordCorrectionError\">Passwords must match.<br /> </li>\r\n        </ul>\r\n\r\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n    </div>\r\n</form>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'welcome',\r\n    templateUrl: 'app.welcome.html',\r\n    styleUrls: ['app.welcome.css'],\r\n})\r\n\r\nexport class Welcome {\r\n\r\n\r\n}\r\n\r\n\r\n","<div class=\"col-md-6 offset-md-3 welcome\">\n    <img class=\"icon\" src=\"/assets/notepad.jfif/\" alt=\"app Icon\">\n    <div>\n        Hello, dear friend! <br />\n        We are glad to see you!  <br />\n        Please login or register  <br />\n        to open your notepad.  <br />\n    </div>\n</div>\n\n","import { JwtModule } from \"@auth0/angular-jwt\";\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppMain } from './main/app.main';\nimport { AppNotelist } from './notelist/app.notelist';\nimport { AppAuthorization } from './authorization/app.authorization'\nimport { CookieService } from './data/cookie.service'\nimport { Welcome } from './welcome/app.welcome'\n\nexport function tokenGetter() {\n    let cookieService: CookieService = new CookieService;\n    return cookieService.getCookie(\"accessToken\")\n}\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule,\n        JwtModule.forRoot({\n            config: {\n                tokenGetter: tokenGetter,\n                allowedDomains: [\"localhost\"],\n                disallowedRoutes: []\n            }\n        })\n    ],\n    declarations: [\n        AppMain,\n        AppNotelist,\n        AppAuthorization,\n        Welcome,\n    ], \n    bootstrap: [AppMain]\n})\nexport class AppModule { }","import { Note } from './note';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Configuration } from '../app.Configuration'\r\n\r\n@Injectable()\r\nexport class HttpService  {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    conf = new Configuration()\r\n\r\n    urlNote: string = this.conf.serverUrl + '/Api/Note'\r\n    urlAuth: string = this.conf.serverUrl + '/Api/Auth'\r\n\r\n    create(note: Note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('text', note.Text);\r\n        formData.append('date', note.Date)\r\n        return this.http.post(this.urlNote + \"/createNote\", formData)\r\n    }\r\n\r\n    update(note: Note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('text', note.Text);\r\n        formData.append('date', note.Date);\r\n        formData.append('noteId', note.Id.toString());\r\n        return this.http.post(this.urlNote + '/updateNote', formData)\r\n    }\r\n\r\n    loadNotes(): Observable<object[]> {\r\n      \r\n        return this.http.get(this.urlNote + '/getAllNotes').pipe(map(data => {\r\n            return { ...(<any>data).value, notes: (<any>data).value.notes.map(note => new Note(note.text, note.date, note.noteId)) }              \r\n        }));\r\n    }\r\n\r\n    delete(note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('noteId', note.Id.toString());\r\n        return this.http.post(this.urlNote + '/deleteNote', formData)\r\n    }\r\n\r\n    checkUsername(username: string): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('username', username);\r\n        return this.http.post(this.urlAuth + '/checkUsername', formData)\r\n    }\r\n\r\n    login(form: NgForm): Observable<object> {\r\n        const credentials = JSON.stringify(form.value);\r\n        return this.http.post(this.urlAuth + '/login', credentials, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        })\r\n    }\r\n\r\n    register(form: NgForm): Observable<object>  {\r\n        const credentials = JSON.stringify(form.value);\r\n        return this.http.post(this.urlAuth + '/register', credentials, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        })\r\n    }\r\n\r\n    async refresh(): Promise<HttpResponse<Object>>{\r\n        const response = await this.http.post(this.urlAuth + '/refresh', null, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            }),\r\n            observe: 'response'\r\n        }).toPromise();\r\n        return response\r\n    }\r\n}","export class Configuration {\r\n    serverUrl: string = 'http://localhost' /*'https://notepad45.herokuapp.com'*/\r\n}","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { HttpService } from '../data/http.service'\r\nimport { Note } from '../data/note';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { HttpHeaders, HttpClient, } from '@angular/common/http';\r\nimport { CookieService } from '../data/cookie.service'\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    selector: 'notelist',\r\n    templateUrl: 'app.notelist.html',\r\n    styleUrls: ['app.notelist.css'],\r\n    providers: [HttpService, CookieService],\r\n})\r\n\r\nexport class AppNotelist {\r\n\r\n    updateNoteForm: FormGroup;\r\n    @Output() onChangedUserName = new EventEmitter<string>();\r\n    \r\n    notelist: Array<Note> = [];\r\n    constructor(private fb: FormBuilder, private httpService: HttpService, private jwtHelper: JwtHelperService, private cookieService: CookieService) {\r\n        this._createUpdateNoteForm();\r\n    }\r\n\r\n    private _createUpdateNoteForm() {\r\n        this.updateNoteForm = this.fb.group({\r\n            text: [''],\r\n            id: [''],\r\n        })\r\n    }\r\n\r\n    async createNote(): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) {\r\n            this.onChangedUserName.emit(null)\r\n            return\r\n        }\r\n\r\n        let note: Note = new Note(\"\", this.formateDate(new Date), null)\r\n\r\n        this.httpService.create(note).subscribe((id: any) => {\r\n            note.Id = id\r\n        }, (err) => { this.onChangedUserName.emit(null) })\r\n\r\n        this.notelist.unshift(note)\r\n        setTimeout(() => {\r\n            note.Selected = true\r\n        }, 100);\r\n    }\r\n\r\n    async update(note: Note, index: number): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) {\r\n            this.onChangedUserName.emit(null)\r\n            return\r\n        }\r\n\r\n        this.httpService.update(note).subscribe(() => { }, (err) => { this.onChangedUserName.emit(null) })\r\n        note.Selected = false;\r\n        note.TempText = null;\r\n    }\r\n\r\n    async del(note: Note, index: number): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) {\r\n            this.onChangedUserName.emit(null)\r\n            return\r\n        }\r\n        this.httpService.delete(note).subscribe(() => { }, (err) => { this.onChangedUserName.emit(null) })\r\n        note.Selected = false;\r\n        this.notelist.splice(index, 1)\r\n    }\r\n\r\n\r\n    async selectNote(note: Note): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) {\r\n            this.onChangedUserName.emit(null)\r\n            return\r\n        }\r\n\r\n        note.Selected = true;\r\n        note.TempText = note.Text\r\n    }\r\n\r\n    async unselectNote(note: Note, index: number): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) {\r\n            this.onChangedUserName.emit(null)\r\n            return\r\n        }\r\n\r\n        note.Selected = false;\r\n        note.Text = note.TempText\r\n        note.TempText = null;\r\n    }\r\n\r\n    async loadNotes(): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) {\r\n            this.onChangedUserName.emit(null)\r\n            return\r\n        }\r\n\r\n        this.httpService.loadNotes().subscribe((data: any) => {\r\n            this.notelist = data.notes.reverse(data.notes)\r\n            this.onChangedUserName.emit(data.name)\r\n        }, (err) => { this.onChangedUserName.emit(null) })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.loadNotes()\r\n    }\r\n\r\n    formateDate(inDate: Date): string {\r\n        const options = {\r\n            month: 'long',\r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n        };\r\n        return inDate.toLocaleString('ru', options);\r\n    }\r\n\r\n    async canActivate() {\r\n        const token = this.cookieService.getCookie('accessToken')\r\n        if (token && !this.jwtHelper.isTokenExpired(token))\r\n            return true;\r\n\r\n        let refreshSuccessPromise = await this.tryRefreshingTokens()\r\n        return refreshSuccessPromise\r\n    }\r\n\r\n    private async tryRefreshingTokens(): Promise<boolean> {\r\n        try {\r\n            const response = await this.httpService.refresh()\r\n            return response.ok\r\n        }\r\n        catch {\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","<div class=\"col-md-6 offset-md-3 createButtonBlock left\">\n    <div class=\"line\"></div>\n    <button class=\"btn btn-primary createButton\" (click)=\"createNote()\">New Note</button>\n    <div class=\"line right\"></div>\n</div>\n\n\n\n<table class=\"table table-bordered notelistContainer col-md-6 offset-md-3\">\n    <tbody>\n        <tr class=\"noteContainer clickable\" [class.selected]=\"note.Selected\" *ngFor=\"let note of notelist; index as index;\">\n            <td class=\"textBlock clickable\" [class.selected]=\"note.Selected\" (click)=\"selectNote(note)\">\n                <textarea class=\"textBlockInherit\" [class.selected]=\"note.Selected\" contenteditable=\"true\" [(ngModel)]=\"note.Text\" [disabled]=\"!note.Selected\"></textarea>\n            </td>\n            <td class=\"buttonBlock\">\n                <button class=\"btn btn-success saveButton\" [class.selected]=\"note.Selected\" (click)=\"update(note, index)\">Save <br /></button>\n                <button class=\"btn btn-warning cancelButton\" [class.selected]=\"note.Selected\" (click)=\"unselectNote(note, index)\">Cancel <br /></button>\n                <button class=\"btn btn-danger deleteButton\" [class.selected]=\"note.Selected\" (click)=\"del(note, index)\">Delete</button>\n                <spam class=\"date\" [class.selected]=\"note.Selected\">{{note.Date}}</spam>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n\n\n","import { Component } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { CookieService } from '../data/cookie.service'\r\n\n@Component({\n    selector: 'my-app',\n    templateUrl: 'app.main.html',\n    styleUrls: ['app.main.css'],\n    providers: [CookieService],\n\n})\nexport class AppMain {\n\n    constructor(private jwtHelper: JwtHelperService, private cookieService: CookieService) { }\n\n    userAuthenticated = this.isUserAuthenticated()\n    userName: string\n\n    onChangedAuth(increased: boolean) {\r\n        this.userAuthenticated = increased\r\n    }\n\n    onChangedUserName(newUserName: string) {\r\n        if (newUserName === null)\r\n            this.userAuthenticated = false\r\n        this.userName = newUserName\r\n    }\n\n\n    isUserAuthenticated() {\n        const token = this.cookieService.getCookie(\"accessToken\")\n        return (token && true);\n    }\n}\n\n","<div>\n    <authorization [userAuthenticated]=\"userAuthenticated\"\n                   (onChangedAuth)=\"onChangedAuth($event)\"\n                   [userName] = \"userName\">\n    </authorization>\n    <notelist \n              *ngIf=\"userAuthenticated\"\n              (onChangedUserName)=\"onChangedUserName($event)\">\n    </notelist>\n\n    <welcome *ngIf=\"!userAuthenticated\"> </welcome>\n</div>  \n\n","export class Note {\n    Text: string;\n    Date: string;\n    Id: number;\n    Selected: boolean;\n    TempText: string;\n\n    constructor(text: string, date: string, id: number) {\n        this.Text = text;\n        this.Date = date;\n        this.Id = id;\n        this.Selected = false;\n        this.TempText = null;\n    }\n} \n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nconst platform = platformBrowserDynamic();\nplatform.bootstrapModule(AppModule);","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}