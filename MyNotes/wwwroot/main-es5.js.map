{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Data/Note.ts","webpack:///src/app/Data/http.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/authorization/app.authorization.ts","webpack:///src/app/authorization/app.authorization.html","webpack:///src/app/main/app.main.ts","webpack:///src/app/main/app.main.html","webpack:///src/app/notelist/app.notelist.ts","webpack:///src/app/notelist/app.notelist.html","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Note","text","date","Text","Date","Id","Selected","TempText","HttpService","http","url","note","formData","FormData","append","post","put","get","pipe","data","map","noteId","AppModule","imports","declarations","bootstrap","AppAuthorization","email","login","password","repeatedPassword","console","log","submit","selector","templateUrl","styleUrls","AppMain","AppNotelist","httpService","notelist","formateDate","save","subscribe","unshift","setTimeout","update","index","splice","loadNotes","inDate","options","month","day","hour","minute","toLocaleString","createNote","providers","platform","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Note {\n    Text: string;\n    Date: string;\n    Id: number;\n    Selected: boolean;\n    TempText: string;\n\n    constructor(text: string, date: string, id: number) {\n        this.Text = text;\n        this.Date = date;\n        this.Id = id;\n        this.Selected = false;\n        this.TempText = null;\n    }\n} \n","import { Note } from './Note';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    url: string = 'http://localhost/Api/Note';\r\n    constructor(private http: HttpClient) { }\r\n\r\n    save(note: Note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('text', note.Text);\r\n        formData.append('date', note.Date)\r\n        return this.http.post(this.url, formData)\r\n    }\r\n\r\n    update(note: Note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('text', note.Text);\r\n        formData.append('date', note.Date)\r\n        return this.http.put(this.url + '/' + note.Id, formData)\r\n    }\r\n\r\n    loadNotes(): Observable<Note[]> {\r\n       return this.http.get(this.url).pipe(map(data => {\r\n            return data.map(note => new Note(note.text, note.date, note.noteId))              \r\n        }));\r\n    }\r\n\r\n    delete(note): Observable<object> {\r\n        return this.http.delete(this.url + '/' + note.Id)\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppMain } from './main/app.main';\nimport { AppNotelist } from './notelist/app.notelist';\nimport { AppAuthorization } from './authorization/app.authorization';\n\n\n@NgModule({\n    imports: [BrowserModule, FormsModule, HttpClientModule],\n    declarations: [AppMain, AppNotelist, AppAuthorization], \n    bootstrap: [AppMain]\n})\nexport class AppModule { }","import { Component } from '@angular/core';\nimport { Note } from '../Data/Note'\n@Component({\n    selector: 'authorization',\n    templateUrl: 'app.authorization.html',\n    styleUrls: ['app.authorization.css']\n\n})\nexport class AppAuthorization {\n    email: string = 'nikolai-4545@mail.ru'\n    login: string = 'fliper666'\n    password: string = '123321123'\n    repeatedPassword: string = ''\n\n    submit(): void {\n        console.log('data')\n        console.log(this.login)\r\n        console.log(this.email)\r\n        console.log(this.password)\r\n        console.log(this.repeatedPassword)\r\n    }\n}","<div class=\"wrapper\">\r\n        <div class=\"form-top\">\r\n            <div class=\"data2\">\r\n                <div class=\"data2_1\">\r\n                    <label for=\"name\">Login</label>\r\n                    <input type=\"email\" [(ngModel)]=\"login\" required>\r\n                    <label class=\"required\"></label>\r\n                </div>\r\n                <div class=\"data2_1\">\r\n                    <label for=\"name\">Email</label>\r\n                    <input type=\"email\" [(ngModel)]=\"email\" required>\r\n                    <label class=\"required\"></label>\r\n                </div>\r\n                <div class=\"data2_2\">\r\n                    <label for=\"name\">Пароль</label>\r\n                    <input type=\"password\" [(ngModel)]=\"password\" required>\r\n                    <label class=\"required\"></label>\r\n                </div>\r\n                <div class=\"data2_3\">\r\n                    <label for=\"name\">Повторите</label>\r\n                    <input type=\"password\" [(ngModel)]=\"repeatedPassword\" required>\r\n                    <label class=\"required\"></label>\r\n                </div>\r\n            </div>\r\n            <div class=\"data3\">\r\n                <label for=\"name\">Введите число с картинки</label>\r\n                <div class=\"data3_2\">\r\n                    <span>\r\n                        <img src=\"https://blog.malwarebytes.com/wp-content/uploads/2015/01/captcha2.png\" alt=\"\">\r\n                    </span>\r\n                    <input type=\"number\" name=\"captcha\" required>\r\n                    <span class=\"wrong-captcha\">Неправильное число</span>\r\n                    <label class=\"required\"></label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button class=\"btn btn-success submitButton\" (click)=\"submit()\">Delete</button>\r\n</div>","import { Component } from '@angular/core';\nimport { Note } from '../Data/Note'\n\n@Component({\n    selector: 'my-app',\n    templateUrl: 'app.main.html',\n    styleUrls: ['app.main.css']\n\n})\nexport class AppMain {\n   \n}\n\n","<div>\n    <authorization></authorization>\n    <notelist></notelist>\n</div>  \n\n","import { Component } from '@angular/core';\r\nimport { HttpService } from '../Data/http.service'\r\nimport { Note } from '../Data/Note';\r\n\r\n@Component({\r\n    selector: 'notelist',\r\n    templateUrl: 'app.notelist.html',\r\n    styleUrls: ['app.notelist.css'],\r\n    providers: [HttpService],\r\n})\r\n\r\nexport class AppNotelist {\r\n\r\n    notelist: Array<Note> = [];\r\n\r\n    constructor(private httpService: HttpService) { }\r\n\r\n    createNote(): void {\r\n        let note: Note = new Note(\"\", this.formateDate(new Date), null)\r\n\r\n        this.httpService.save(note).subscribe((id: any) => {\r\n            note.Id = id\r\n        })\r\n\r\n        this.notelist.unshift(note)\r\n        setTimeout(() => {\r\n            note.Selected = true\r\n        }, 100);\r\n    }\r\n\r\n    update(note: Note): void {\r\n        this.httpService.update(note).subscribe()\r\n        note.Selected = false;\r\n        note.TempText = null;\r\n    }\r\n\r\n    del(note: Note, index: number): void {\r\n        this.httpService.delete(note).subscribe()\r\n        note.Selected = false;\r\n        this.notelist.splice(index, 1)\r\n    }\r\n\r\n\r\n    selectNote(note: Note): void {\r\n        note.Selected = true;\r\n        note.TempText = note.Text\r\n    }\r\n\r\n    unselectNote(note: Note, index: number): void {\r\n        note.Selected = false;\r\n        note.Text = note.TempText\r\n        note.TempText = null;\r\n    }\r\n\r\n    loadNotes(): void {\r\n        this.httpService.loadNotes().subscribe((data: Array<Note>) => {\r\n            this.notelist = data\r\n        })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.loadNotes()\r\n    }\r\n\r\n    formateDate(inDate: Date): string {\r\n        const options = {\r\n            month: 'long',\r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n        };\r\n        return inDate.toLocaleString('ru', options);\r\n    }\r\n}\r\n\r\n\r\n","<div style=\"height: 60px;\">\n    <button class=\"btn btn-success createButton\" (click)=\"createNote()\">New Note</button>\n</div>\n<div class=\"notelistContainer col-md-6 offset-md-3\">\n    <div class=\"noteContainer\" [class.selected]=\"note.Selected\" *ngFor=\"let note of notelist; index as index;\">\n        <div class=\"body\" [class.selected]=\"note.Selected\" (click)=\"selectNote(note)\">\n            <textarea class=\"noteText\" [class.selected]=\"note.Selected\" [(ngModel)]=\"note.Text\" [disabled]=\"!note.Selected\"></textarea>\n            <input class=\"noteDate\" [class.selected]=\"note.Selected\" type=\"text\" [(ngModel)]=\"note.Date\" disabled>\n        </div>\n        <div class=\"buttonBlock\">\n            <button [class.selected]=\"note.Selected\" class=\"btn btn-success saveButton\" (click)=\"update(note, index)\">Save</button>\n            <button [class.selected]=\"note.Selected\" class=\"btn btn-success canselButton\" (click)=\"unselectNote(note, index)\">Cansel</button>\n            <button [class.selected]=\"note.Selected\" class=\"btn btn-success deleteButton\" (click)=\"del(note, index)\">Delete</button>\n        </div>\n    </div>\n</div>\n\n    ","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nconst platform = platformBrowserDynamic();\nplatform.bootstrapModule(AppModule);"]}