{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Data/Note.ts","webpack:///src/app/Data/http.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/authorization/app.authorization.ts","webpack:///src/app/authorization/app.authorization.html","webpack:///src/app/main/app.main.ts","webpack:///src/app/main/app.main.html","webpack:///src/app/notelist/app.notelist.html","webpack:///src/app/notelist/app.notelist.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Note","text","date","Text","Date","Id","Selected","TempText","HttpService","http","urlNote","urlAuth","note","formData","FormData","append","post","toString","get","pipe","data","value","notes","map","noteId","username","form","credentials","JSON","stringify","headers","console","log","observe","toPromise","response","tokenGetter","localStorage","getItem","AppModule","forRoot","config","allowedDomains","disallowedRoutes","imports","declarations","bootstrap","AppAuthorization","fb","httpService","onChangedAuth","activeLoginForm","activeRegisterForm","error","_createForm","clientForm","group","required","minLength","password","pattern","rePassword","isRePasswordCorrect","control","condition","valid","RePasswordCorrectionError","invalid","logout","register","subscribe","onCopmplete","err","onError","login","errResponse","token","accessToken","refreshToken","setItem","emit","removeItem","userName","getFormcontroll","selector","templateUrl","styleUrls","providers","userAuthenticated","AppMain","jwtHelper","isUserAuthenticated","increased","newUserName","isTokenExpired","AppNotelist","onChangedUserName","notelist","canActivate","canActivatePromise","formateDate","create","unshift","setTimeout","update","index","splice","loadNotes","name","inDate","options","month","day","hour","minute","toLocaleString","tryRefreshingTokens","refreshSuccessPromise","refresh","newToken","body","newRefreshToken","isRefreshSuccess","createNote","platform","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Note {\n    Text: string;\n    Date: string;\n    Id: number;\n    Selected: boolean;\n    TempText: string;\n\n    constructor(text: string, date: string, id: number) {\n        this.Text = text;\n        this.Date = date;\n        this.Id = id;\n        this.Selected = false;\n        this.TempText = null;\n    }\n} \n","import { Note } from './Note';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    urlNote: string = 'http://localhost/Api/Note';\r\n    urlAuth: string = 'http://localhost/Api/Auth'\r\n    constructor(private http: HttpClient) { }\r\n\r\n    create(note: Note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('text', note.Text);\r\n        formData.append('date', note.Date)\r\n        return this.http.post(this.urlNote + \"/createNote\", formData)\r\n    }\r\n\r\n    update(note: Note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('text', note.Text);\r\n        formData.append('date', note.Date);\r\n        formData.append('noteId', note.Id.toString());\r\n        return this.http.post(this.urlNote + '/updateNote', formData)\r\n    }\r\n\r\n    loadNotes(): Observable<object[]> {\r\n      \r\n        return this.http.get(this.urlNote + '/getAllNotes').pipe(map(data => {\r\n            return { ...data.value, notes: data.value.notes.map(note => new Note(note.text, note.date, note.noteId)) }              \r\n        }));\r\n    }\r\n\r\n    delete(note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('noteId', note.Id.toString());\r\n        return this.http.post(this.urlNote + '/deleteNote', formData)\r\n    }\r\n\r\n    checkUsername(username: string): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('username', username);\r\n        return this.http.post(this.urlAuth + '/checkUsername', formData)\r\n    }\r\n\r\n    login(form: NgForm): Observable<object> {\r\n        const credentials = JSON.stringify(form.value);\r\n        return this.http.post(this.urlAuth + '/login', credentials, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        })\r\n    }\r\n\r\n    register(form: NgForm): Observable<object>  {\r\n        const credentials = JSON.stringify(form.value);\r\n        console.log(credentials)\r\n        return this.http.post(this.urlAuth + '/register', credentials, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        })\r\n    }\r\n\r\n    async refresh(credentials): Promise<HttpResponse<Object>>{\r\n        const response = await this.http.post(this.urlAuth + '/refresh', credentials, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            }),\r\n            observe: 'response'\r\n        }).toPromise();\r\n        return response\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppMain } from './main/app.main';\nimport { AppNotelist } from './notelist/app.notelist';\nimport { AppAuthorization } from './authorization/app.authorization'\nimport { JwtModule } from \"@auth0/angular-jwt\"; \n\nexport function tokenGetter() {\n  return localStorage.getItem(\"jwt\");\n}\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule,\n        JwtModule.forRoot({\n            config: {\n                tokenGetter: tokenGetter,\n                allowedDomains: [\"localhost\"],\n                disallowedRoutes: []\n            }\n        })\n    ],\n    declarations: [\n        AppMain,\n        AppNotelist,\n        AppAuthorization,\n    ], \n    bootstrap: [AppMain]\n})\nexport class AppModule { }","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Note } from '../Data/Note'\nimport { HttpService } from '../Data/http.service'\nimport { NgForm, FormControl, Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\n    selector: 'authorization',\n    templateUrl: 'app.authorization.html',\n    styleUrls: ['app.authorization.css'],\n    providers: [HttpService],\n})\nexport class AppAuthorization{\n\n    clientForm: FormGroup;\r\n\r\n    constructor(private fb: FormBuilder, private httpService: HttpService) {\r\n        this._createForm();\r\n    }\r\n\r\n    private _createForm() {\r\n        this.clientForm = this.fb.group({\r\n            username: ['', [\r\n                Validators.required,\r\n                Validators.minLength(3),\r\n            ]],\r\n            password: ['', [\r\n                    Validators.required,\r\n                    Validators.minLength(5),\r\n                    Validators.pattern(/[0-9]/),\r\n                    Validators.pattern(/[a-zA-Z]/),\r\n            ]],\r\n\r\n            rePassword: ['', [\r\n                Validators.required,\r\n                this.isRePasswordCorrect(),\r\n            ]],\r\n        })\r\n    }\r\n\r\n    get _username() {\r\n        return this.clientForm.get('username')\r\n    }\r\n\r\n    get _password() {\r\n        return this.clientForm.get('password')\r\n    }\r\n\r\n    get _rePassword() {\r\n        return this.clientForm.get('rePassword')\r\n    }\r\n\r\n    isRePasswordCorrect(): ValidatorFn {\r\n        return (\r\n            control: AbstractControl\r\n        ): { [key: string]: boolean } | null => {\r\n\r\n            if (this.clientForm) {\r\n                var condition = this.clientForm.get('password').value === this.clientForm.get('rePassword').value\r\n            }\r\n            let valid =\r\n                !control.value || condition\r\n            return valid ? null : {\r\n                RePasswordCorrectionError: true,\r\n            }\r\n        }\r\n    }\r\n\n    getFormcontroll() {\n        console.log(this.clientForm)\r\n    }\n\n    @Input() userAuthenticated;\n    @Input() userName\n    @Output() onChangedAuth = new EventEmitter<boolean>();\n    activeLoginForm: boolean = false;\n    activeRegisterForm: boolean = false\n    error: string = null;\n\n    getLoginForm() {\n        this.activeLoginForm = true;\r\n        this.activeRegisterForm = false;\r\n        this.error = null;\r\n    }\n\n    getRegisterForm() {\n        this.activeRegisterForm = true;\r\n        this.activeLoginForm = false;\r\n        this.error = null;\r\n    }\n\n\n    register(form: NgForm) {\n        if (this.clientForm.invalid) {\n            return\n        }   \n        \n        this.logout()\n        this.httpService.register(form).subscribe(response => this.onCopmplete(response), (err: HttpErrorResponse) => this.onError(err))\n    }\n\n    login(form: NgForm) {\n        this.logout()\n        this.httpService.login(form).subscribe(response => this.onCopmplete(response), errResponse => this.onError(errResponse))\n    }\n\n    onCopmplete(response) {\n        const token = (<any>response).value.accessToken;\n        const refreshToken = (<any>response).value.refreshToken;\n        localStorage.setItem(\"jwt\", token);\n        localStorage.setItem(\"refreshToken\", refreshToken);\r\n        this.onChangedAuth.emit(true);\r\n        this.activeLoginForm = false;\r\n        this.activeRegisterForm = false;\r\n        this.error = null;\r\n    }\n\n    onError(errResponse) {\r\n        this.error = errResponse.error;\r\n    }\n\n    public logout() {\r\n        localStorage.removeItem(\"jwt\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        this.onChangedAuth.emit(false);\r\n        this.activeLoginForm = true;\r\n        this.userName = null\r\n    }\n}\n\n","<header>\r\n    <div class=\"nav\">\r\n        <div class=\"authPanel\">\r\n            {{userName}}\r\n            <button *ngIf=\"!userAuthenticated\" class=\"authPanelButton\" (click)=\"getLoginForm()\">Login</button>\r\n            <button *ngIf=\"!userAuthenticated\" class=\"authPanelButton\" (click)=\"getRegisterForm()\">Register</button>\r\n            <button *ngIf=\"userAuthenticated\" class=\"authPanelButton\" (click)=\"logout()\">logout</button>\r\n        </div>\r\n    </div>\r\n</header>\r\n\r\n\r\n<form *ngIf=\"activeLoginForm\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\r\n    <div class=\"container-fluid formContainer\">\r\n        <h2 class=\"form-signin-heading\">Login</h2> <br />\r\n\r\n        <input type=\"email\" name=\"username\" ngModel class=\"form-control\" placeholder=\"User Name\" required autofocus>  <br />\r\n\r\n        <input type=\"password\" name=\"password\" ngModel class=\"form-control\" placeholder=\"Password\" required> <br />\r\n\r\n        <button class=\"btn btn-lg btn-primary formButton\" type=\"submit\">Sign in</button>\r\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n    </div>\r\n</form>\r\n\r\n<form *ngIf=\"activeRegisterForm\" #registerForm=\"ngForm\" (ngSubmit)=\"register(registerForm)\" [formGroup]=\"clientForm\" novalidate>\r\n    <div class=\"container-fluid formContainer\">\r\n        <h2 class=\"form-signin-heading\">Register</h2> <br />\r\n\r\n        <div class=\"inputBlock\">\r\n            <input type=\"email\" ngModel class=\"form-control\" placeholder=\"User Name\" formControlName=\"username\">\r\n            <span class=\"requiredSimbol\" *ngIf=\"_username.errors?.required && _username.touched\">*</span>\r\n            <br />\r\n        </div>\r\n\r\n        <div class=\"inputBlock\">\r\n            <input type=\"password\" ngModel class=\"form-control\" placeholder=\"Password\" formControlName=\"password\">\r\n            <span class=\"requiredSimbol\" *ngIf=\"_password.errors?.required && _password.touched\">*</span>\r\n            <br />\r\n        </div>\r\n\r\n        <div class=\"inputBlock\">\r\n            <input type=\"password\" ngModel class=\"form-control\" placeholder=\"Password Repeat\" formControlName=\"rePassword\">\r\n            <span class=\"requiredSimbol\" *ngIf=\"_rePassword.errors?.required && _rePassword.touched\">*</span>\r\n            <br />\r\n        </div>\r\n\r\n        <button class=\"btn btn-lg btn-primary formButton\" type=\"submit\">Register</button>\r\n\r\n        <ul class=\"errorBlock\" *ngIf=\"_username.invalid && _username.touched\">\r\n            <li *ngIf=\"_username.errors?.minlength\">username must contain at least {{_username.errors?.minlength.requiredLength}} simbols. <br /></li>\r\n        </ul>\r\n\r\n        <ul class=\"errorBlock\" *ngIf=\"_password.invalid && _password.touched\">\r\n            <li *ngIf=\"_password.errors?.minlength\">Password must contain at least {{_password.errors?.minlength.requiredLength}} simbols. <br /></li>\r\n            <li *ngIf=\"_password.errors?.pattern?.requiredPattern == '/[0-9]/' \">Password must contain digit. <br /></li>\r\n            <li *ngIf=\"_password.errors?.pattern?.requiredPattern == '/[a-zA-Z]/' \">Password must contain letter.<br /></li>\r\n        </ul>\r\n\r\n        <ul class=\"errorBlock\" *ngIf=\"_rePassword.invalid && _rePassword.touched\">\r\n            <li *ngIf=\"_rePassword.errors?.RePasswordCorrectionError\">Passwords must match.<br /> </li>\r\n        </ul>\r\n\r\n        <div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n    </div>\r\n</form>\r\n\r\n<button (click)=\"getFormcontroll()\"> getFormcontroll</button>\r\n","import { Component } from '@angular/core';\nimport { Note } from '../Data/Note'\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\n@Component({\n    selector: 'my-app',\n    templateUrl: 'app.main.html',\n    styleUrls: ['app.main.css']\n\n})\nexport class AppMain {\n\n    constructor(private jwtHelper: JwtHelperService,) { }\n\n    userAuthenticated = this.isUserAuthenticated()\n    userName: string\n\n    onChangedAuth(increased: boolean) {\r\n        this.userAuthenticated = increased\r\n    }\n\n    onChangedUserName(newUserName: string) {\r\n        if (newUserName === null)\r\n            this.userAuthenticated = false\r\n        this.userName = newUserName\r\n    }\n\n    isUserAuthenticated() {\n        const token: string = localStorage.getItem(\"jwt\");\n        return (token && !this.jwtHelper.isTokenExpired(token));\n    }\n}\n\n","<div>\n    <authorization [userAuthenticated]=\"userAuthenticated\"\n                   (onChangedAuth)=\"onChangedAuth($event)\"\n                   [userName] = \"userName\">\n    </authorization>\n    <notelist \n              *ngIf=\"userAuthenticated\"\n              (onChangedUserName)=\"onChangedUserName($event)\">\n    </notelist>\n</div>  \n\n","<div>\n    <button class=\"btn btn-success createButton\" (click)=\"createNote()\">New Note</button>\n</div>\n<div class=\"notelistContainer col-md-6 offset-md-3\">\n    <div class=\"noteContainer\" [class.selected]=\"note.Selected\" *ngFor=\"let note of notelist; index as index;\">\n        <div class=\"body\" [class.selected]=\"note.Selected\" (click)=\"selectNote(note)\">\n            <textarea class=\"noteText\" [class.selected]=\"note.Selected\" [(ngModel)]=\"note.Text\" [disabled]=\"!note.Selected\"></textarea>\n            <input class=\"noteDate\" [class.selected]=\"note.Selected\" type=\"text\" [(ngModel)]=\"note.Date\" disabled>\n        </div>\n        <div class=\"buttonBlock\">\n            <button [class.selected]=\"note.Selected\" class=\"btn btn-success saveButton\" (click)=\"update(note, index)\">Save</button>\n            <button [class.selected]=\"note.Selected\" class=\"btn btn-success cancelButton\" (click)=\"unselectNote(note, index)\">Cancel</button>\n            <button [class.selected]=\"note.Selected\" class=\"btn btn-success deleteButton\" (click)=\"del(note, index)\">Delete</button>\n        </div>\n    </div>\n</div>\n\n\n\n    ","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { HttpService } from '../Data/http.service'\r\nimport { Note } from '../Data/Note';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { HttpHeaders, HttpClient,  } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'notelist',\r\n    templateUrl: 'app.notelist.html',\r\n    styleUrls: ['app.notelist.css'],\r\n    providers: [HttpService],\r\n})\r\n\r\nexport class AppNotelist {\r\n\r\n    @Output() onChangedUserName = new EventEmitter<string>();\r\n    notelist: Array<Note> = [];\r\n    constructor(private httpService: HttpService, private jwtHelper: JwtHelperService, private http: HttpClient) { }\r\n\r\n\r\n    async createNote(): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) return\r\n\r\n        let note: Note = new Note(\"\", this.formateDate(new Date), null)\r\n\r\n        this.httpService.create(note).subscribe((id: any) => {\r\n            note.Id = id\r\n        }, (err) => { this.onChangedUserName.emit(null) })\r\n\r\n        this.notelist.unshift(note)\r\n        setTimeout(() => {\r\n            note.Selected = true\r\n        }, 100);\r\n    }\r\n\r\n    async update(note: Note): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) return\r\n\r\n        this.httpService.update(note).subscribe(() => { }, (err) => { this.onChangedUserName.emit(null) })\r\n        note.Selected = false;\r\n        note.TempText = null;\r\n    }\r\n\r\n    async del(note: Note, index: number): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) {\r\n            this.onChangedUserName.emit(null)\r\n            return\r\n        }\r\n\r\n        if (!this.canActivate()) return \r\n        this.httpService.delete(note).subscribe(() => { }, (err) => { this.onChangedUserName.emit(null) })\r\n        note.Selected = false;\r\n        this.notelist.splice(index, 1)\r\n    }\r\n\r\n\r\n    async selectNote(note: Note): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) return\r\n\r\n        note.Selected = true;\r\n        note.TempText = note.Text\r\n    }\r\n\r\n    async unselectNote(note: Note, index: number): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) return\r\n \r\n        note.Selected = false;\r\n        note.Text = note.TempText\r\n        note.TempText = null;\r\n    }\r\n\r\n    async loadNotes(): Promise<void> {\r\n        let canActivatePromise = await this.canActivate()\r\n        if (!canActivatePromise) return\r\n\r\n        this.httpService.loadNotes().subscribe((data: any) => {\r\n            this.notelist = data.notes\r\n            this.onChangedUserName.emit(data.name)\r\n        }, (err) => { this.onChangedUserName.emit(null) })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n \r\n        this.loadNotes()\r\n    }\r\n\r\n    formateDate(inDate: Date): string {\r\n        const options = {\r\n            month: 'long',\r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n        };\r\n        return inDate.toLocaleString('ru', options);\r\n    }\r\n\r\n    async canActivate() {\r\n        const token = localStorage.getItem(\"jwt\");\r\n\r\n        if (token && !this.jwtHelper.isTokenExpired(token))\r\n            return true;\r\n\r\n        let refreshSuccessPromise = await this.tryRefreshingTokens(token)\r\n        if (refreshSuccessPromise)\r\n            return true\r\n\r\n        this.onChangedUserName.emit(null)\r\n        return false\r\n    }\r\n\r\n    private async tryRefreshingTokens(token: string): Promise<boolean> {\r\n        const refreshToken: string = localStorage.getItem(\"refreshToken\");\r\n        const credentials = JSON.stringify({ accessToken: token, refreshToken: refreshToken });\r\n        let isRefreshSuccess: boolean;\r\n        try {\r\n            const response = await this.httpService.refresh(credentials)\r\n\r\n            const newToken = response.body.accessToken;\r\n            const newRefreshToken = response.body.refreshToken;\r\n            localStorage.setItem(\"jwt\", newToken);\r\n            localStorage.setItem(\"refreshToken\", newRefreshToken);\r\n            isRefreshSuccess = true;\r\n        }\r\n        catch (ex) {\r\n            isRefreshSuccess = false;\r\n        }\r\n        return isRefreshSuccess;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nconst platform = platformBrowserDynamic();\nplatform.bootstrapModule(AppModule);"]}