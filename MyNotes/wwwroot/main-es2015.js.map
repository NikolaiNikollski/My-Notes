{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Data/Note.ts","./src/app/Data/http.service.ts","./src/app/app.module.ts","./src/app/authorization/app.authorization.ts","./src/app/authorization/app.authorization.html","./src/app/main/app.main.ts","./src/app/main/app.main.html","./src/app/notelist/app.notelist.ts","./src/app/notelist/app.notelist.html","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Note {\n    Text: string;\n    Date: string;\n    Id: number;\n    Selected: boolean;\n    TempText: string;\n\n    constructor(text: string, date: string, id: number) {\n        this.Text = text;\n        this.Date = date;\n        this.Id = id;\n        this.Selected = false;\n        this.TempText = null;\n    }\n} \n","import { Note } from './Note';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    urlNote: string = 'http://localhost/Api/Note';\r\n    urlAccount: string = 'http://localhost/Api/Auth'\r\n    constructor(private http: HttpClient) { }\r\n\r\n    save(note: Note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('text', note.Text);\r\n        formData.append('date', note.Date)\r\n        return this.http.post(this.urlNote, formData)\r\n    }\r\n\r\n    update(note: Note): Observable<object> {\r\n        const formData = new FormData();\r\n        formData.append('text', note.Text);\r\n        formData.append('date', note.Date)\r\n        return this.http.put(this.urlNote + '/' + note.Id, formData)\r\n    }\r\n\r\n    loadNotes(): Observable<Note[]> {\r\n       return this.http.get(this.urlNote).pipe(map(data => {\r\n            return data.map(note => new Note(note.text, note.date, note.noteId))              \r\n        }));\r\n    }\r\n\r\n    delete(note): Observable<object> {\r\n        return this.http.delete(this.urlNote + '/' + note.Id)\r\n    }\r\n\r\n    login(form: NgForm): Observable<object> {\r\n        const credentials = JSON.stringify(form.value);\r\n        console.log(credentials);\r\n        return this.http.post(this.urlAccount + '/login', credentials, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        })\r\n    }\r\n    register(form: NgForm): Observable<object>  {\r\n        const credentials = JSON.stringify(form.value);\r\n        return this.http.post(this.urlAccount + '/register', credentials, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        })\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppMain } from './main/app.main';\nimport { AppNotelist } from './notelist/app.notelist';\nimport { AppAuthorization } from './authorization/app.authorization'\n\nimport { JwtModule } from \"@auth0/angular-jwt\";\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"jwt\");\n}\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        JwtModule.forRoot({\n            config: {\n                tokenGetter: tokenGetter,\n                allowedDomains: [\"localhost\"],\n                disallowedRoutes: []\n            }\n        })\n    ],\n    declarations: [\n        AppMain,\n        AppNotelist,\n        AppAuthorization,\n    ], \n    bootstrap: [AppMain]\n})\nexport class AppModule { }","import { Component, Input } from '@angular/core';\nimport { Note } from '../Data/Note'\nimport { HttpService } from '../Data/http.service'\nimport { NgForm } from '@angular/forms';\r\n\n@Component({\n    selector: 'authorization',\n    templateUrl: 'app.authorization.html',\n    styleUrls: ['app.authorization.css'],\n    providers: [HttpService],\n})\nexport class AppAuthorization {\n\n    constructor(private httpService: HttpService) { }\n\n    invalidLogin: boolean; s\n\n    register(form: NgForm) {\n        this.httpService.register(form).subscribe(response => console.log(response))\n    }\n\n    login(form: NgForm) {\n\n        this.httpService.login(form).subscribe(\n            response => {\n                const token = (<any>response).value.accessToken\n                const refreshToken = (<any>response).value.refreshToken;\n                localStorage.setItem(\"jwt\", token);\n                localStorage.setItem(\"refreshToken\", refreshToken);\n                this.invalidLogin = false;\n            },\n            err => {\n                this.invalidLogin = true\r\n            }\r\n        )\n    }\n}","<form class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\r\n    <div class=\"container-fluid\">\r\n        <h2 class=\"form-signin-heading\">Login</h2>\r\n        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">Invalid username or password.</div>\r\n        <br />\r\n        <label for=\"username\" class=\"sr-only\">Email address</label>\r\n        <input type=\"email\" id=\"username\" name=\"username\" ngModel class=\"form-control\" placeholder=\"User Name\" required autofocus>\r\n        <br />\r\n        <label for=\"password\" class=\"sr-only\">Password</label>\r\n        <input type=\"password\" id=\"password\" name=\"password\" ngModel class=\"form-control\" placeholder=\"Password\" required>\r\n        <br />\r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n    </div>\r\n</form>\r\n\r\n<form class=\"form-signin\" #registerForm=\"ngForm\" (ngSubmit)=\"register(registerForm)\">\r\n    <div class=\"container-fluid\">\r\n        <h2 class=\"form-signin-heading\">Register</h2>\r\n        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">Invalid username or password.</div>\r\n        <br />\r\n        <label for=\"username\" class=\"sr-only\">Email address</label>\r\n        <input type=\"email\" id=\"username\" name=\"username\" ngModel class=\"form-control\" placeholder=\"User Name\" required autofocus>\r\n        <br />\r\n        <label for=\"password\" class=\"sr-only\">Password</label>\r\n        <input type=\"password\" id=\"password\" name=\"password\" ngModel class=\"form-control\" placeholder=\"Password\" required>\r\n        <br />\r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>\r\n    </div>\r\n</form>\r\n","import { Component } from '@angular/core';\nimport { Note } from '../Data/Note'\n\n@Component({\n    selector: 'my-app',\n    templateUrl: 'app.main.html',\n    styleUrls: ['app.main.css']\n\n})\nexport class AppMain {\n   userId: number = null\n}\n\n","<div>\n    <authorization></authorization>\n    <notelist></notelist>\n</div>  \n\n","import { Component } from '@angular/core';\r\nimport { HttpService } from '../Data/http.service'\r\nimport { Note } from '../Data/Note';\r\n\r\n@Component({\r\n    selector: 'notelist',\r\n    templateUrl: 'app.notelist.html',\r\n    styleUrls: ['app.notelist.css'],\r\n    providers: [HttpService],\r\n})\r\n\r\nexport class AppNotelist {\r\n\r\n    notelist: Array<Note> = [];\r\n\r\n    constructor(private httpService: HttpService) { }\r\n\r\n    createNote(): void {\r\n        let note: Note = new Note(\"\", this.formateDate(new Date), null)\r\n\r\n        this.httpService.save(note).subscribe((id: any) => {\r\n            note.Id = id\r\n        })\r\n\r\n        this.notelist.unshift(note)\r\n        setTimeout(() => {\r\n            note.Selected = true\r\n        }, 100);\r\n    }\r\n\r\n    update(note: Note): void {\r\n        this.httpService.update(note).subscribe()\r\n        note.Selected = false;\r\n        note.TempText = null;\r\n    }\r\n\r\n    del(note: Note, index: number): void {\r\n        this.httpService.delete(note).subscribe()\r\n        note.Selected = false;\r\n        this.notelist.splice(index, 1)\r\n    }\r\n\r\n\r\n    selectNote(note: Note): void {\r\n        note.Selected = true;\r\n        note.TempText = note.Text\r\n    }\r\n\r\n    unselectNote(note: Note, index: number): void {\r\n        note.Selected = false;\r\n        note.Text = note.TempText\r\n        note.TempText = null;\r\n    }\r\n\r\n    loadNotes(): void {\r\n        this.httpService.loadNotes().subscribe((data: Array<Note>) => {\r\n            this.notelist = data\r\n        })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.loadNotes()\r\n    }\r\n\r\n    formateDate(inDate: Date): string {\r\n        const options = {\r\n            month: 'long',\r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n        };\r\n        return inDate.toLocaleString('ru', options);\r\n    }\r\n}\r\n\r\n\r\n","<div style=\"height: 60px;\">\n    <button class=\"btn btn-success createButton\" (click)=\"createNote()\">New Note</button>\n</div>\n<div class=\"notelistContainer col-md-6 offset-md-3\">\n    <div class=\"noteContainer\" [class.selected]=\"note.Selected\" *ngFor=\"let note of notelist; index as index;\">\n        <div class=\"body\" [class.selected]=\"note.Selected\" (click)=\"selectNote(note)\">\n            <textarea class=\"noteText\" [class.selected]=\"note.Selected\" [(ngModel)]=\"note.Text\" [disabled]=\"!note.Selected\"></textarea>\n            <input class=\"noteDate\" [class.selected]=\"note.Selected\" type=\"text\" [(ngModel)]=\"note.Date\" disabled>\n        </div>\n        <div class=\"buttonBlock\">\n            <button [class.selected]=\"note.Selected\" class=\"btn btn-success saveButton\" (click)=\"update(note, index)\">Save</button>\n            <button [class.selected]=\"note.Selected\" class=\"btn btn-success canselButton\" (click)=\"unselectNote(note, index)\">Cansel</button>\n            <button [class.selected]=\"note.Selected\" class=\"btn btn-success deleteButton\" (click)=\"del(note, index)\">Delete</button>\n        </div>\n    </div>\n</div>\n\n    ","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nconst platform = platformBrowserDynamic();\nplatform.bootstrapModule(AppModule);"],"sourceRoot":"webpack:///"}